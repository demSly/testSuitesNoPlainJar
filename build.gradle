plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

testing {
    suites {
        e2eTest(JvmTestSuite) {
            testType = TestSuiteType.INTEGRATION_TEST
            dependencies {
                implementation(project())
                implementation 'org.springframework.boot:spring-boot-starter-test'
            }
        }
    }
}

// Starting from Spring Boot 2.5.0, also a plain jar is generated.
// Normally we would skip its creation, but test suites Gradle plugin assumes it exists, as shown in :
// ./gradlew clean e2eTest --debug | grep "NormalizingJavaCompiler"
jar {
    enabled = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java.srcDirs += "$projectDir/externalDirectory"
        java.srcDirs += "$buildDir/swagger-code-controlService/src/main/java"
    }
}
